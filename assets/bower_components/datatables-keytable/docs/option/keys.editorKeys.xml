<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="KeyTable">
	<name>keys.editorKeys</name>
	<summary>Enable or disable navigation while inline editing</summary>
	<since>KeyTable 2.1.3</since>

	<type type="string">
		<description>
			Define behaviour of navigation to follow when inline editing:

			* `-string navigation-only` - arrow keys will move the focused cell, causing the current cell to loose focus. Tab and return key are also active.
			* `-string tab-only` - tab key can be used to move to the next / previous fields and return to submit the current field, but the arrow keys are ignored by KeyTable, allowing the arrow keys to be used to navigate in the text box in the cell.
		</description>
	</type>

	<default value="navigation-only">
		Navigation is allowed and the current cell will be blurred when arrow keys are used.
	</default>

	<description>
		When using KeyTable with [Editor](//editor.datatables.net) to provide an Excel like inline editing experience for the end user, you may wish to control the behaviour of the arrow keys. There are currently two options KeyTable supports:

		* `-string navigation-only` - like Excel the current cell will be blurred and the focus moved per the arrow keys.
		* `-string tab-only` - more like what might be expected on the web - the arrow keys move the cursor through the text box. Tab can be used to move between cells.

		The behaviour you might wish to use can be configured through this option. For applications where end users are used to Excel's behaviour you might wish to use the default, while for more general use the `-string tab-only` option might be appropriate.
	</description>

	<example title="Allow the arrow keys to perform navigation in the text box rather than the table when inline editing is active."><![CDATA[

$('#myTable').DataTable( {
	keys: {
		editor: editor,
		editorKeys: 'tab-only'
	}
} );

]]></example>

	<related>kt-event key</related>
</dt-option>